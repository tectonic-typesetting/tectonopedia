# Copyright 2023 the Tectonic Project
# Licensed under the MIT License.
#
# Deployment pipeline, run when all CI tests pass on `main` or `rc`.
# Parameters:
#
# - `isMainDev`: this is an update to the main development branch; update
#   continuous-deployment artifacts
# - `isRelease`: this is an update to the `rc` branch; run the Official Release
#   machinery

parameters:
- name: isMainDev
  type: boolean
  default: false
- name: isRelease
  type: boolean
  default: false

jobs:

# Things that only happen in main-dev mode. We need something here, so we have a placeholder
- ${{ if parameters.isMainDev }}:
  - job: noop
    pool:
      vmImage: ubuntu-latest
    steps:
    - template: azure-deployment-setup.yml
      parameters:
        setupGit: false

# Release-only activities:
- ${{ if parameters.isRelease }}:
  - job: branch_and_tag
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-deployment-setup.yml
      parameters:
        setupGit: true
    - bash: |
        set -xeou pipefail
        cranko release-workflow tag
        git push --tags origin release:release
      displayName: Tag and push
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)

  - job: cargo_publish
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-deployment-setup.yml
    - bash: |
        set -xeou pipefail
        cranko cargo foreach-released --pause=30 -- publish --no-verify
      displayName: Publish updated Cargo crates
      env:
        CARGO_REGISTRY_TOKEN: $(CARGO_REGISTRY_TOKEN)

  - job: github_releases
    dependsOn: branch_and_tag # otherwise, GitHub will create the tag itself
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-deployment-setup.yml
    - bash: |
        set -xeuo pipefail
        cranko github create-releases
        # todo: artifacts?
      displayName: Create per-project GitHub releases
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)
